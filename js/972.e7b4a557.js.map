{"version":3,"file":"js/972.e7b4a557.js","mappings":"gMAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,WAAWF,EAAII,GAAG,CAACC,MAAM,CAAC,QAAUL,EAAIM,UAAU,MAAQ,QAAQC,GAAG,CAAC,MAAQP,EAAIQ,OAAO,WAAWR,EAAIS,aAAY,GAAO,CAACP,EAAGF,EAAIU,SAAS,CAACC,IAAI,cAAcX,EAAIY,GAAG,YAAY,EACvP,EACGC,EAAkB,G,UCQtB,GACAC,KAAAA,aACAC,WAAAA,CACAC,eADA,MAEAC,oBAAAA,EAAAA,KAEAC,MAAAA,CACAC,SAAAA,CACAC,KAAAA,OACAC,UAAAA,GAEAC,QAAAA,CACAF,KAAAA,OACAG,QAAAA,WAEAd,YAAAA,CACAW,KAAAA,OACAG,QAAAA,KAAAA,CAAAA,KAGAC,OACA,OACAC,aAAAA,EAEA,EACAC,SAAAA,CACApB,YACA,wBACA,oCACA,kBAGA,UAIA,YAEA,EACAI,WACA,mEACA,GAEAiB,QAAAA,CACAnB,OACA,oBACA,+BACAoB,YAAAA,IAAAA,KAAAA,aAAAA,GAAAA,KACA,IC1D0P,I,UCOtPC,GAAY,OACd,EACA9B,EACAc,GACA,EACA,KACA,KACA,MAIF,EAAegB,EAAiB,O","sources":["webpack://@radiantearth/stac-browser/./src/components/CopyButton.vue","webpack://@radiantearth/stac-browser/src/components/CopyButton.vue","webpack://@radiantearth/stac-browser/./src/components/CopyButton.vue?517d","webpack://@radiantearth/stac-browser/./src/components/CopyButton.vue?5144"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('b-button',_vm._b({attrs:{\"variant\":_vm.copyColor,\"title\":\"Copy\"},on:{\"click\":_vm.copy}},'b-button',_vm.buttonProps,false),[_c(_vm.copyIcon,{tag:\"component\"}),_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <b-button @click=\"copy\" :variant=\"copyColor\" v-bind=\"buttonProps\" title=\"Copy\">\n    <component :is=\"copyIcon\" />\n    <slot />    \n  </b-button>\n</template>\n\n<script>\nimport { BIconClipboard, BIconClipboardCheck } from 'bootstrap-vue';\n\nexport default {\n    name: \"CopyButton\",\n    components: {\n        BIconClipboard,\n        BIconClipboardCheck\n    },\n    props: {\n        copyText: {\n            type: String,\n            required: true\n        },\n        variant: {\n            type: String,\n            default: \"primary\"\n        },\n        buttonProps: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    data() {\n        return {\n            copyConfirm: false\n        };\n    },\n    computed: {\n        copyColor() {\n            if (this.copyConfirm) {\n                if (this.variant.startsWith('outline-')) {\n                    return 'outline-success';\n                }\n                else {\n                    return 'success';\n                }\n            }\n            else {\n                return this.variant;\n            }\n        },\n        copyIcon() {\n            return this.copyConfirm ? 'b-icon-clipboard-check' : 'b-icon-clipboard';\n        }\n    },\n    methods: {\n        copy() {\n            this.copyConfirm = true;\n            this.$clipboard(this.copyText);\n            setTimeout(() => this.copyConfirm = false, 2500);\n        }\n    }\n};\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CopyButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CopyButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CopyButton.vue?vue&type=template&id=49fd25db&\"\nimport script from \"./CopyButton.vue?vue&type=script&lang=js&\"\nexport * from \"./CopyButton.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","_b","attrs","copyColor","on","copy","buttonProps","copyIcon","tag","_t","staticRenderFns","name","components","BIconClipboard","BIconClipboardCheck","props","copyText","type","required","variant","default","data","copyConfirm","computed","methods","setTimeout","component"],"sourceRoot":""}